This package sets up a 'masquerade mode' distcc server for gcc (including g++,
objc and gfortran) and clang/clang++.

The server and the clients should all have the same version of Slackware
(i.e. all running 14.1, or all running the same revision of -current).

To start the distccd daemon automatically on boot, you must add these lines in
/etc/rc.d/rc.local:

  if [ -x /etc/rc.d/rc.distccd ]; then
    /etc/rc.d/rc.distccd start
  fi

You must also edit the file /etc/distcc/clients.allow to add your networks
and/or hosts that will be allowed to use the server, for example,

  127.0.0.1
  192.168.3.0/24


Cross compilation

On x86_64, the server supports full multiarch cross compilation -- it can
build for x86_64, for i486/i586/i686, and for arm if the arm-x-toolchain package
is installed:

* To compile for Slackware 64 (x86_64) clients, and to cross-compile for 32 bit
Slackware clients (i486 etc), you don't need to do anything.  Slackware's
x86_64 gcc and llvm packages already support i486/i586/i686 cross-compilation.

* To cross-compile for Slackware ARM clients, you need to install the
arm-x-toolchain package on the server (gfortran not supported).

On i486/i586/i686, the server supports i486/i586/i686 clients, and also arm
clients if the arm-x-toolchain package is installed (gfortran not supported).

On arm, the server supports arm clients. Cross compilation is not supported.

| server | client | support                  |
|--------|--------|--------------------------|
| x86_64 | x86_64 | yes                      |
| x86_64 | i?86   | yes                      |
| x86_64 | arm    | requires arm-x-toolchain |
| i?86   | x86_64 | no                       |
| i?86   | i?86   | yes                      |
| i?86   | arm    | requires arm-x-toolchain |
| arm    | x86_64 | no                       |
| arm    | i?86   | no                       |
| arm    | arm    | yes                      |


For more information, please see
  https://github.com/idlemoor/distcc-tools
